{"version":3,"file":"static/js/857.15959775.chunk.js","mappings":"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","sources":["constants/Address.ts","contracts/VendorABI.ts","pages/BuyCoinPage.tsx"],"sourcesContent":["enum contractAddress {\n    tokenContractAddress = '0x9d46e816e10c6353Fcf7381343b053117641d472',\n    vendorContractAddress = '0xeF98846BF1e7F5f8c380F481701763650021A5d4',\n}\n\nexport default contractAddress","export const vendorABI = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"tokenAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"buyer\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amountOfETH\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amountOfTokens\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"BuyTokens\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"buyTokens\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"renounceOwnership\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenAmountToSell\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"sellTokens\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"tokensPerETH\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"transferOwnership\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]","import { useState, useEffect } from 'react'\r\nimport { FloatingLabel, Form } from 'react-bootstrap'\r\nimport { Fragment } from 'react'\r\nimport ReactIf from '../components/ReactIf'\r\nimport { vendorABI } from '../contracts/VendorABI'\r\nimport Web3 from 'web3'\r\nimport axios from 'axios'\r\nimport contractAddress from '../constants/Address'\r\nimport endPoints from '../constants/Endpoints'\r\nimport { toast } from 'react-hot-toast'\r\ndeclare const window: any\r\nconst web3 = new Web3(Web3.givenProvider)\r\n\r\nconst BuyCoinPage = () => {\r\n    const [tokens, setTokens] = useState('')\r\n    const [ether, setEther] = useState(0)\r\n    const [account, setAccount] = useState('')\r\n    const [step, setStep] = useState(1)\r\n    const [txError, setTxError] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setEther(Number(tokens) / 10000)\r\n    }, [tokens])\r\n\r\n    const connectWallet = async () => {\r\n        try {\r\n            if (typeof window != 'undefined' && typeof window.ethereum != 'undefined') {\r\n                try {\r\n                    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' })\r\n                    setAccount(accounts[0])\r\n                } catch (err) {\r\n                    toast.error('Unable to connect to metamask')\r\n                }\r\n            } else {\r\n                toast.error('Please install metamask')\r\n            }\r\n        } catch (error) {\r\n            toast.error('Please install metamask')\r\n        }\r\n    }\r\n\r\n    const buyCoin = async () => {\r\n        try {\r\n            setStep(2)\r\n            const vendor = new web3.eth.Contract(vendorABI as any, contractAddress.vendorContractAddress)\r\n            const request = await vendor.methods.buyTokens().send({\r\n                from: account,\r\n                value: web3.utils.toWei(ether.toString(), 'ether'),\r\n            })\r\n            const obj = {\r\n                fromAddress: request.from || '0x',\r\n                transactionType: 'Buy',\r\n                lstAmount: tokens,\r\n                ethAmount: ether,\r\n                txHash: request.transactionHash\r\n            }\r\n            await axios.post(endPoints.createTxEndpoint, obj)\r\n            setStep(3)\r\n            toast.success('You have successfully bought LST tokens!')\r\n        } catch (err) {\r\n            setTxError(true)\r\n            setStep(3)\r\n            toast.error('Error purchasing LST tokens')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className='box'>\r\n                <ReactIf condition={account !== ''}>\r\n                    <ReactIf condition={step === 1}>\r\n                        <p className='branding'>Buy LST</p>\r\n                        <FloatingLabel controlId='floatingAmount' label='Amount of tokens'>\r\n                            <Form.Control autoFocus type='email' placeholder='Amount of tokens' onChange={(e: any) => setTokens(e.target.value)} required />\r\n                        </FloatingLabel>\r\n                        <p id='alert'>ETH equivalent: {ether}</p>\r\n                        <button className='btn btnbox' onClick={buyCoin}>Buy<i className='fa-solid fa-circle-arrow-right'></i></button>\r\n                    </ReactIf>\r\n                    <ReactIf condition={step === 2}>\r\n                        <p className='branding'>Transaction Status</p>\r\n                        <div className='text-center mt-4'>\r\n                            <i className='fa-solid fa-circle-notch fa-spin text-center fa-6x'></i>\r\n                            <p className='lead text-center mt-4'>Processing</p>\r\n                        </div>\r\n                    </ReactIf>\r\n                    <ReactIf condition={step === 3}>\r\n                        <p className='branding'>Transaction Status</p>\r\n                        <ReactIf condition={!txError}>\r\n                            <div className='text-center'>\r\n                                <i className='fa-solid fa-circle-check fa-6x'></i>\r\n                                <p className='lead text-center mt-4'>Success</p>\r\n                            </div>\r\n                        </ReactIf>\r\n                        <ReactIf condition={txError}>\r\n                            <div className='text-center'>\r\n                                <i className='fa-solid fa-circle-xmark fa-6x'></i>\r\n                                <p className='lead text-center mt-4'>Failed</p>\r\n                            </div>\r\n                        </ReactIf>\r\n                    </ReactIf>\r\n                </ReactIf>\r\n                <ReactIf condition={account === ''}>\r\n                    <p className='branding'>Connect Wallet</p>\r\n                    <button className='btn btnbox' onClick={connectWallet}>Connect to Metamask<i className='fa-solid fa-circle-arrow-right'></i></button>\r\n                </ReactIf>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default BuyCoinPage"],"names":["contractAddress","vendorABI","web3","Web3","useState","tokens","setTokens","ether","setEther","account","setAccount","step","setStep","txError","setTxError","useEffect","Number","connectWallet","window","ethereum","request","method","accounts","toast","buyCoin","vendor","eth","Contract","methods","buyTokens","send","from","value","utils","toWei","toString","obj","fromAddress","transactionType","lstAmount","ethAmount","txHash","transactionHash","axios","endPoints","Fragment","className","condition","controlId","label","autoFocus","type","placeholder","onChange","e","target","required","id","onClick"],"sourceRoot":""}